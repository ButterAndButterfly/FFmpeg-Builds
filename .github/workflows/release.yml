name: Release Build
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENSE'

env:
  DOCKER_BUILDKIT: 1

jobs:
  build:
    name: Release Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [win64]
        variant: [lgpl]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
          

      - name: Build ffmpeg
        run: |
            chmod 777 build.sh
            ./build.sh ${{ matrix.target }} ${{ matrix.variant }}
            cd artifacts
            ls -l
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg
          path: artifacts/*
      
      - name: Gen Params
        id: gen_params
        run: |
            RELDATE="$(date +'%Y-%m-%d %H:%M')"
            NAME="Auto-Build $RELDATE"
            TAGNAME="autobuild-$(date +'%Y-%m-%d-%H-%M')"
            ASSET_NAME="$(ls artifacts/)"
            echo "::set-output name=asset_name::${ASSET_NAME}"
            echo "::set-output name=tag_name::${TAGNAME}"
            echo "::set-output name=rel_date::${RELDATE}"
            
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.gen_params.outputs.tag_name}}
          release_name: ${{steps.gen_params.outputs.tag_name}}
          body: |
                ffmpeg-${{ matrix.target }}-${{ matrix.variant }}
          draft: false
          prerelease: false
          
      - name: Upload Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./artifacts/${{steps.gen_params.outputs.asset_name}}
          asset_name: ffmpeg-${{ matrix.target }}-${{ matrix.variant }}.zip
          asset_content_type: application/zip